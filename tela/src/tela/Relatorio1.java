/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import Cliente.Cliente;
import Produto.Produto;
import Venda.ItensVenda;
import Venda.Venda;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author victor.rslucca
 */
public class Relatorio1 extends javax.swing.JFrame {

    /**
     * Creates new form Relatorio1
     */
    public Relatorio1() {
        initComponents();
        TotalText.setEnabled(false);
        this.setLocationRelativeTo(null);
        DefaultTableModel modelCliente = (DefaultTableModel) jTable1.getModel();
        modelCliente.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CancelarButton = new javax.swing.JButton();
        BuscarProdButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        TotalText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        date2 = new javax.swing.JFormattedTextField();
        date1 = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("*Data Inicial: ");

        jLabel3.setText("*Data Final: ");

        CancelarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        CancelarButton.setText("Cancelar");
        CancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarButtonActionPerformed(evt);
            }
        });

        BuscarProdButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier.png"))); // NOI18N
        BuscarProdButton.setText("Buscar");
        BuscarProdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarProdButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Total");

        TotalText.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Relatório");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome Cliente", "Nome Produto", "Coleção", "Quantidade", "Data", "Valor", "Valor total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        date2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        date1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jLabel5.setText("Formato da data \"dd/mm/yyyy\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TotalText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelarButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BuscarProdButton)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(BuscarProdButton)
                    .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelarButton)
                    .addComponent(jLabel4)
                    .addComponent(TotalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelarButtonActionPerformed

    private void BuscarProdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarProdButtonActionPerformed
        //Limpa as tabelas para uma nova reserva
        DefaultTableModel modelRelatorio = (DefaultTableModel) jTable1.getModel();
        modelRelatorio.setRowCount(0);
        Date a = new Date();
        Date b = new Date();
        a = (Date) date1.getValue();
        b = (Date) date2.getValue();
        try {
            ArrayList<Venda> listaRelatorio = Servico.ServicoVenda.procurarVenda(a, b);
            if (listaRelatorio == null || listaRelatorio.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Não há dados "
                        + "de vendas para serem exibidos", "Erro",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            double total = 0;
            //Itera pelas reservas
            for (int i = 0; i < listaRelatorio.size(); i++) {
                //Obtém o cliente da reserva
                Cliente clienteReserva = listaRelatorio.get(i).getCliente();
                Object[] linhaReserva = new Object[7];
                //Verifica se o cliente foi definido corretamente na reserva
                if (clienteReserva != null) {
                    //Se um cliente foi definido, monta uma linha da tabela
                    //para exibição de seu nome e a adiciona na tabela
                    String nomeCompleto = clienteReserva.getNome() + " "
                            + clienteReserva.getSobrenome();
                    linhaReserva[0] = nomeCompleto;
                    linhaReserva[6] = listaRelatorio.get(i).getTotalVenda();
                }

                //Obtém a lista de itens de reserva
                ArrayList<ItensVenda> listItensVenda = listaRelatorio.get(i).getItens();
                //Verifica se há itens de reserva antes de iterá-los
                if (listItensVenda != null || !listItensVenda.isEmpty()) {
                    //Itera pelos itens de reserva
                    for (int j = 0; j < listItensVenda.size(); j++) {
                        //Obtém o quarto do item de reserva
                        Produto prodt = listItensVenda.get(j).getProduto();
                        //Verifica se o quarto foi corretamente definido
                        if (prodt != null && j == 0) {
                            linhaReserva[1] = prodt.getNome();
                            linhaReserva[2] = prodt.getColecao();
                            linhaReserva[3] = listItensVenda.get(j).getQtdProduto();
                            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
                            linhaReserva[4]=(formater.format(listaRelatorio.get(i).getDataVenda()));
                            linhaReserva[5] = prodt.getPreco();
                            total += prodt.getPreco();
                            modelRelatorio.addRow(linhaReserva);
                        } else {
                            Object[] linhaItem = new Object[7];
                            linhaItem[1] = prodt.getNome();
                            linhaItem[2] = prodt.getColecao();
                            linhaItem[3] = listItensVenda.get(j).getQtdProduto();
                            SimpleDateFormat formater = new SimpleDateFormat("dd/MM/yyyy");
                            linhaItem[4]=(formater.format(listaRelatorio.get(i).getDataVenda()));
                            linhaItem[5] = prodt.getPreco();
                            total += prodt.getPreco();
                            modelRelatorio.addRow(linhaItem);
                        }
                    }
                }
                //Pula uma linha
                Object[] linha = new Object[7];
                linha[0] = "---------------------------";
                linha[1] = "---------------------------";
                linha[2] = "---------------------------";
                linha[3] = "---------------------------";
                linha[4] = "---------------------------";
                linha[5] = "---------------------------";
                linha[6] = "---------------------------";
                modelRelatorio.addRow(linha);
            }
            TotalText.setText(Double.toString(total));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao encontrar vendas entre as datas inseridas.");
        }


    }//GEN-LAST:event_BuscarProdButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarProdButton;
    private javax.swing.JButton CancelarButton;
    private javax.swing.JTextField TotalText;
    private javax.swing.JFormattedTextField date1;
    private javax.swing.JFormattedTextField date2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
